// Generated by CIRCT firtool-1.62.0
module TopInner(
  input  clock,
         reset,
         io_rx,
  output io_tx,
         io_ledr
);

  reg         ledReg;
  reg  [22:0] timerReg;
  wire        _GEN = timerReg == 23'h0;
  always @(posedge clock) begin
    if (reset) begin
      ledReg <= 1'h1;
      timerReg <= 23'h2DC6BF;
    end
    else begin
      ledReg <= _GEN ^ ledReg;
      if (_GEN)
        timerReg <= 23'h5B8D7F;
      else
        timerReg <= timerReg - 23'h1;
    end
  end // always @(posedge)
  assign io_tx = io_rx;
  assign io_ledr = ledReg;
endmodule

module top(
  input  clk,
         io_ubtn,
         io_rx,
  output io_tx,
         io_ledr,
         io_ledg
);

  reg  [7:0] resetTimerReg;
  wire       _GEN = resetTimerReg == 8'hB4;
  always @(posedge clk) begin
    if (~_GEN)
      resetTimerReg <= resetTimerReg + 8'h1;
  end // always @(posedge)
  TopInner inner (
    .clock   (clk),
    .reset   (~_GEN | ~io_ubtn),
    .io_rx   (io_rx),
    .io_tx   (io_tx),
    .io_ledr (io_ledr)
  );
  assign io_ledg = 1'h0;
endmodule

